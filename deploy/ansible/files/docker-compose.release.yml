version: '3'

services:
  postgres:
    image: postgres
    container_name: analytics_postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_PASSWORD: "59bf71f6-ca01-431b-95a3-1fb1d7aa7847"
    ports:
      - "5440:5432"
    volumes:
      - ./postgres:/var/lib/postgresql
    logging:
      options:
        max-size: "30m"
        max-file: "3"
      driver: "json-file"

#  clickhouse:
#    image: yandex/clickhouse-server:19.16.19.85
#    container_name: analytics_clickhouse
#    ports:
#      - "8140:8123"
#    volumes:
#      - ./clickhouse:/var/lib/clickhouse
#    logging:
#      options:
#        max-size: "30m"
#        max-file: "3"
#      driver: "json-file"
#
#  nsq:
#    image: nsqio/nsq:v1.2.0
#    command: /nsqlookupd
#    container_name: analytics_msq
#    ports:
#      - "4140:4150"
#      - "4141:4151"
#    volumes:
#      - ./nsq:/var/lib/nsq
#    logging:
#      options:
#        max-size: "30m"
#        max-file: "3"
#      driver: "json-file"

  redis:
    image: redis:6.0.4-alpine
    container_name: analytics_redis
    ports:
      - "6340:6379"
    volumes:
      - ./redis:/var/lib/redis
    logging:
      options:
        max-size: "30m"
        max-file: "3"
      driver: "json-file"

  server:
    image: registry.gitlab.com/balconygames/analytics:latest
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      # - nsq
      - migrate
      - redis
    links:
      - postgres
      # - nsq
      - redis
      # - clickhouse
    command: "/main api"
    environment: &server_environment
      ENV: "prod"

      AES256_KEY: "c8037c01-f800-49ed-af2e-e52785006adf"
      JWT_CLIENT_SHA_256_SECRET: "59adc0e5-7f19-476c-abfe-4f08136fd558"
      JWT_SERVER_SHA_256_SECRET: "59adc0e5-7f19-476c-abfe-4f08136fd558"

      POSTGRES_DB_USER: "postgres"
      POSTGRES_DB_PASS: "59bf71f6-ca01-431b-95a3-1fb1d7aa7847"
      POSTGRES_DB_HOST: "postgres"
      POSTGRES_DB_NAME: "base"
      POSTGRES_DB_DISABLE_SSL: "true"

      MODULE_AUTH_POSTGRES_DB_USER: "postgres"
      MODULE_AUTH_POSTGRES_DB_PASS: "59bf71f6-ca01-431b-95a3-1fb1d7aa7847"
      MODULE_AUTH_POSTGRES_DB_HOST: "postgres"
      MODULE_AUTH_POSTGRES_DB_NAME: "prod_auth"
      MODULE_AUTH_POSTGRES_DB_DISABLE_SSL: "true"
      MODULE_AUTH_REDIS_HOST: "redis"
      MODULE_AUTH_REDIS_PORT: "6379"

      MODULE_LEADERBOARD_POSTGRES_DB_USER: "postgres"
      MODULE_LEADERBOARD_POSTGRES_DB_PASS: "59bf71f6-ca01-431b-95a3-1fb1d7aa7847"
      MODULE_LEADERBOARD_POSTGRES_DB_HOST: "postgres"
      MODULE_LEADERBOARD_POSTGRES_DB_NAME: "prod_leaderboard"
      MODULE_LEADERBOARD_POSTGRES_DB_DISABLE_SSL: "true"
      MODULE_LEADERBOARD_REDIS_HOST: "redis"
      MODULE_LEADERBOARD_REDIS_PORT: "6379"

      MODULE_PRIMARY_POSTGRES_DB_USER: "postgres"
      MODULE_PRIMARY_POSTGRES_DB_PASS: "59bf71f6-ca01-431b-95a3-1fb1d7aa7847"
      MODULE_PRIMARY_POSTGRES_DB_HOST: "postgres"
      MODULE_PRIMARY_POSTGRES_DB_NAME: "prod_primary"
      MODULE_PRIMARY_POSTGRES_DB_DISABLE_SSL: "true"

      MODULE_PIXEL_NSQ_ADDR: "nsq"
      MODULE_PIXEL_NSQ_TOPIC: "events"
    logging:
      options:
        max-size: "30m"
        max-file: "3"
      driver: "json-file"

  migrate:
    image: registry.gitlab.com/balconygames/analytics:latest
    command: /main db.migrate
    depends_on:
      - postgres
    links:
      - postgres
    environment: *server_environment

  nginx:
    image: nginx:1.19.0-alpine
    restart: always
    volumes:
     - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
     - ./certs:/etc/letsencrypt
     - ./certs-data:/data/letsencrypt
    links:
      - server
    depends_on:
      - server
    expose:
      - "80"
      - "443"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_PORT=80
    command: /bin/ash -c "exec nginx -g 'daemon off;'"
    logging:
      options:
        max-size: "30m"
        max-file: "3"
      driver: "json-file"
